module frequency_measurement #(parameter N=4) (
    input logic clk,
    input logic reset,
    input logic [N-1:0] A_num,
    input logic [N-1:0] B_num,
    input logic [3:0] operations_buttons,
    input logic [1:0] change_mode,
    output logic [6:0] seg1,
    output logic [6:0] seg2,
    output logic [6:0] result_seg,
    output logic [6:0] flags_seg
);

    // Instancia del Flip-Flop 1
    FlipFlop1 #(N) ff1 (
        .clk(clk),
        .reset(reset),
        .A_numf1(A_num),
        .B_numf1(B_num),
        .operations_buttonsf1(operations_buttons),
        .change_modef1(change_mode),
        .Output_A_numf1(Output_A_num),
        .Output_B_numf1(Output_B_num),
        .Output_operations_buttonsf1(Output_operations_buttons),
        .Output_change_modef1(Output_change_mode)
    );

    // Instancia de la ALU
    alu #(N) my_alu (
        .A(Output_A_num),
        .B(Output_B_num),
        .op(Output_operations_buttons),
        .mode(Output_change_mode),
        .result(alu_result),
        .flags(alu_flags)
    );

    // Instancia del Flip-Flop 2
    FlipFlop2 #(7) ff2 (
        .clk(clk),
        .reset(reset),
        .seg1f2(seg1),
        .seg2f2(seg2),
        .result_segf2(alu_result),
        .flags_segf2(alu_flags),
        .Output_seg1f2(Output_seg1),
        .Output_seg2f2(Output_seg2),
        .Output_result_segf2(Output_result_seg),
        .Output_flags_segf2(Output_flags_seg)
    );

endmodule
